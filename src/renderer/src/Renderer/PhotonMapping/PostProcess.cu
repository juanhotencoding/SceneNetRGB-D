/* 
 * Copyright (c) 2013 Opposite Renderer
 * For the full copyright and license information, please view the LICENSE.txt
 * file that was distributed with this source code.
*/

#include <optix.h>
#include <optixu/optixu_math_namespace.h>
#include <Util/helpers.h>

using namespace optix;

rtBuffer<float3, 2> rawOutputImageBuffer;
rtBuffer<uchar4, 2> outputImageBuffer;
rtBuffer<float3, 2> indirectRadianceBuffer;
rtBuffer<float3, 2> directRadianceBuffer;
rtDeclareVariable(uint2, launchIndex, rtLaunchIndex, );
rtDeclareVariable(uint2, launchDim, rtLaunchDim, );
rtDeclareVariable(uint, resDownsample, , );
rtDeclareVariable(uint, numIterationsSqrt, , );

RT_PROGRAM void kernel()
{
    const int bloom_filter_size = 27;
    const float BLOOM_FILTER[] =  {
        0.0000000002516443,  0.0000000005496455,  0.0000000011278219,
        0.0000000021740486,  0.0000000039371888,  0.0000000066991839,
        0.0000000107107681,  0.0000000160928562,  0.0000000227245994,
        0.0000000301580017,  0.0000000376074855,  0.0000000440515924,
        0.0000000484483647,  0.0000000500117216,  0.0000000484483647,
        0.0000000440515924,  0.0000000376074855,  0.0000000301580017,
        0.0000000227245994,  0.0000000160928562,  0.0000000107107681,
        0.0000000066991839,  0.0000000039371888,  0.0000000021740486,
        0.0000000011278219,  0.0000000005496455,  0.0000000002516443,
        0.0000000005496455,  0.0000000012005638,  0.0000000024635636,
        0.0000000047494923,  0.0000000086038794,  0.0000000146489940,
        0.0000000234496855,  0.0000000353062505,  0.0000000500117216,
        0.0000000666448994,  0.0000000834969139,  0.0000000982383699,
        0.0000001083899562,  0.0000001120186061,  0.0000001083899562,
        0.0000000982383699,  0.0000000834969139,  0.0000000666448994,
        0.0000000500117216,  0.0000000353062505,  0.0000000234496855,
        0.0000000146489940,  0.0000000086038794,  0.0000000047494923,
        0.0000000024635636,  0.0000000012005638,  0.0000000005496455,
        0.0000000011278219,  0.0000000024635636,  0.0000000050559527,
        0.0000000097509511,  0.0000000176797362,  0.0000000301580017,
        0.0000000484483647,  0.0000000733850996,  0.0000001048869562,
        0.0000001414091271,  0.0000001794873557,  0.0000002137495321,
        0.0000002378823672,  0.0000002466172086,  0.0000002378823672,
        0.0000002137495321,  0.0000001794873557,  0.0000001414091271,
        0.0000001048869562,  0.0000000733850996,  0.0000000484483647,
        0.0000000301580017,  0.0000000176797362,  0.0000000097509511,
        0.0000000050559527,  0.0000000024635636,  0.0000000011278219,
        0.0000000021740486,  0.0000000047494923,  0.0000000097509511,
        0.0000000188241409,  0.0000000342097636,  0.0000000586421728,
        0.0000000950835888,  0.0000001462544415,  0.0000002137495321,
        0.0000002963525358,  0.0000003876007162,  0.0000004741173452,
        0.0000005374803512,  0.0000005608927200,  0.0000005374803512,
        0.0000004741173452,  0.0000003876007162,  0.0000002963525358,
        0.0000002137495321,  0.0000001462544415,  0.0000000950835888,
        0.0000000586421728,  0.0000000342097636,  0.0000000188241409,
        0.0000000097509511,  0.0000000047494923,  0.0000000021740486,
        0.0000000039371888,  0.0000000086038794,  0.0000000176797362,
        0.0000000342097636,  0.0000000625112258,  0.0000001083899562,
        0.0000001794873557,  0.0000002855232643,  0.0000004369335642,
        0.0000006391067450,  0.0000008812659939,  0.0000011261665085,
        0.0000013135021708,  0.0000013842350009,  0.0000013135021708,
        0.0000011261665085,  0.0000008812659939,  0.0000006391067450,
        0.0000004369335642,  0.0000002855232643,  0.0000001794873557,
        0.0000001083899562,  0.0000000625112258,  0.0000000342097636,
        0.0000000176797362,  0.0000000086038794,  0.0000000039371888,
        0.0000000066991839,  0.0000000146489940,  0.0000000301580017,
        0.0000000586421728,  0.0000001083899562,  0.0000001923833428,
        0.0000003318985238,  0.0000005608927200,  0.0000009245517890,
        0.0000014596316049,  0.0000021511646599,  0.0000028884638646,
        0.0000034710010494,  0.0000036943193143,  0.0000034710010494,
        0.0000028884638646,  0.0000021511646599,  0.0000014596316049,
        0.0000009245517890,  0.0000005608927200,  0.0000003318985238,
        0.0000001923833428,  0.0000001083899562,  0.0000000586421728,
        0.0000000301580017,  0.0000000146489940,  0.0000000066991839,
        0.0000000107107681,  0.0000000234496855,  0.0000000484483647,
        0.0000000950835888,  0.0000001794873557,  0.0000003318985238,
        0.0000006116183056,  0.0000011261665085,  0.0000020316049715,
        0.0000034710010494,  0.0000054307206669,  0.0000075892113436,
        0.0000093266514042,  0.0000099983387175,  0.0000093266514042,
        0.0000075892113436,  0.0000054307206669,  0.0000034710010494,
        0.0000020316049715,  0.0000011261665085,  0.0000006116183056,
        0.0000003318985238,  0.0000001794873557,  0.0000000950835888,
        0.0000000484483647,  0.0000000234496855,  0.0000000107107681,
        0.0000000160928562,  0.0000000353062505,  0.0000000733850996,
        0.0000001462544415,  0.0000002855232643,  0.0000005608927200,
        0.0000011261665085,  0.0000022791061676,  0.0000044686871000,
        0.0000081255979209,  0.0000132557020003,  0.0000190058722292,
        0.0000236791300971,  0.0000254935184187,  0.0000236791300971,
        0.0000190058722292,  0.0000132557020003,  0.0000081255979209,
        0.0000044686871000,  0.0000022791061676,  0.0000011261665085,
        0.0000005608927200,  0.0000002855232643,  0.0000001462544415,
        0.0000000733850996,  0.0000000353062505,  0.0000000160928562,
        0.0000000227245994,  0.0000000500117216,  0.0000001048869562,
        0.0000002137495321,  0.0000004369335642,  0.0000009245517890,
        0.0000020316049715,  0.0000044686871000,  0.0000093266514042,
        0.0000176731639331,  0.0000295726249887,  0.0000430322693678,
        0.0000540249098620,  0.0000583019849678,  0.0000540249098620,
        0.0000430322693678,  0.0000295726249887,  0.0000176731639331,
        0.0000093266514042,  0.0000044686871000,  0.0000020316049715,
        0.0000009245517890,  0.0000004369335642,  0.0000002137495321,
        0.0000001048869562,  0.0000000500117216,  0.0000000227245994,
        0.0000000301580017,  0.0000000666448994,  0.0000001414091271,
        0.0000002963525358,  0.0000006391067450,  0.0000014596316049,
        0.0000034710010494,  0.0000081255979209,  0.0000176731639331,
        0.0000343372957073,  0.0000583019849678,  0.0000855390781845,
        0.0001078408573280,  0.0001165278398947,  0.0001078408573280,
        0.0000855390781845,  0.0000583019849678,  0.0000343372957073,
        0.0000176731639331,  0.0000081255979209,  0.0000034710010494,
        0.0000014596316049,  0.0000006391067450,  0.0000002963525358,
        0.0000001414091271,  0.0000000666448994,  0.0000000301580017,
        0.0000000376074855,  0.0000000834969139,  0.0000001794873557,
        0.0000003876007162,  0.0000008812659939,  0.0000021511646599,
        0.0000054307206669,  0.0000132557020003,  0.0000295726249887,
        0.0000583019849678,  0.0000998133899802,  0.0001471153808945,
        0.0001859007305650,  0.0002010250560588,  0.0001859007305650,
        0.0001471153808945,  0.0000998133899802,  0.0000583019849678,
        0.0000295726249887,  0.0000132557020003,  0.0000054307206669,
        0.0000021511646599,  0.0000008812659939,  0.0000003876007162,
        0.0000001794873557,  0.0000000834969139,  0.0000000376074855,
        0.0000000440515924,  0.0000000982383699,  0.0000002137495321,
        0.0000004741173452,  0.0000011261665085,  0.0000028884638646,
        0.0000075892113436,  0.0000190058722292,  0.0000430322693678,
        0.0000855390781845,  0.0001471153808945,  0.0002174487734868,
        0.0003031212995731,  0.0005050589802582,  0.0003031212995731,
        0.0002174487734868,  0.0001471153808945,  0.0000855390781845,
        0.0000430322693678,  0.0000190058722292,  0.0000075892113436,
        0.0000028884638646,  0.0000011261665085,  0.0000004741173452,
        0.0000002137495321,  0.0000000982383699,  0.0000000440515924,
        0.0000000484483647,  0.0000001083899562,  0.0000002378823672,
        0.0000005374803512,  0.0000013135021708,  0.0000034710010494,
        0.0000093266514042,  0.0000236791300971,  0.0000540249098620,
        0.0001078408573280,  0.0001859007305650,  0.0003031212995731,
        0.0116799621533826,  0.0841077819885501,  0.0116799621533826,
        0.0003031212995731,  0.0001859007305650,  0.0001078408573280,
        0.0000540249098620,  0.0000236791300971,  0.0000093266514042,
        0.0000034710010494,  0.0000013135021708,  0.0000005374803512,
        0.0000002378823672,  0.0000001083899562,  0.0000000484483647,
        0.0000000500117216,  0.0000001120186061,  0.0000002466172086,
        0.0000005608927200,  0.0000013842350009,  0.0000036943193143,
        0.0000099983387175,  0.0000254935184187,  0.0000583019849678,
        0.0001165278398947,  0.0002010250560588,  0.0005050589802582,
        0.0841077819885501,  0.6191010925294447,  0.0841077819885501,
        0.0005050589802582,  0.0002010250560588,  0.0001165278398947,
        0.0000583019849678,  0.0000254935184187,  0.0000099983387175,
        0.0000036943193143,  0.0000013842350009,  0.0000005608927200,
        0.0000002466172086,  0.0000001120186061,  0.0000000500117216,
        0.0000000484483647,  0.0000001083899562,  0.0000002378823672,
        0.0000005374803512,  0.0000013135021708,  0.0000034710010494,
        0.0000093266514042,  0.0000236791300971,  0.0000540249098620,
        0.0001078408573280,  0.0001859007305650,  0.0003031212995731,
        0.0116799621533826,  0.0841077819885501,  0.0116799621533826,
        0.0003031212995731,  0.0001859007305650,  0.0001078408573280,
        0.0000540249098620,  0.0000236791300971,  0.0000093266514042,
        0.0000034710010494,  0.0000013135021708,  0.0000005374803512,
        0.0000002378823672,  0.0000001083899562,  0.0000000484483647,
        0.0000000440515924,  0.0000000982383699,  0.0000002137495321,
        0.0000004741173452,  0.0000011261665085,  0.0000028884638646,
        0.0000075892113436,  0.0000190058722292,  0.0000430322693678,
        0.0000855390781845,  0.0001471153808945,  0.0002174487734868,
        0.0003031212995731,  0.0005050589802582,  0.0003031212995731,
        0.0002174487734868,  0.0001471153808945,  0.0000855390781845,
        0.0000430322693678,  0.0000190058722292,  0.0000075892113436,
        0.0000028884638646,  0.0000011261665085,  0.0000004741173452,
        0.0000002137495321,  0.0000000982383699,  0.0000000440515924,
        0.0000000376074855,  0.0000000834969139,  0.0000001794873557,
        0.0000003876007162,  0.0000008812659939,  0.0000021511646599,
        0.0000054307206669,  0.0000132557020003,  0.0000295726249887,
        0.0000583019849678,  0.0000998133899802,  0.0001471153808945,
        0.0001859007305650,  0.0002010250560588,  0.0001859007305650,
        0.0001471153808945,  0.0000998133899802,  0.0000583019849678,
        0.0000295726249887,  0.0000132557020003,  0.0000054307206669,
        0.0000021511646599,  0.0000008812659939,  0.0000003876007162,
        0.0000001794873557,  0.0000000834969139,  0.0000000376074855,
        0.0000000301580017,  0.0000000666448994,  0.0000001414091271,
        0.0000002963525358,  0.0000006391067450,  0.0000014596316049,
        0.0000034710010494,  0.0000081255979209,  0.0000176731639331,
        0.0000343372957073,  0.0000583019849678,  0.0000855390781845,
        0.0001078408573280,  0.0001165278398947,  0.0001078408573280,
        0.0000855390781845,  0.0000583019849678,  0.0000343372957073,
        0.0000176731639331,  0.0000081255979209,  0.0000034710010494,
        0.0000014596316049,  0.0000006391067450,  0.0000002963525358,
        0.0000001414091271,  0.0000000666448994,  0.0000000301580017,
        0.0000000227245994,  0.0000000500117216,  0.0000001048869562,
        0.0000002137495321,  0.0000004369335642,  0.0000009245517890,
        0.0000020316049715,  0.0000044686871000,  0.0000093266514042,
        0.0000176731639331,  0.0000295726249887,  0.0000430322693678,
        0.0000540249098620,  0.0000583019849678,  0.0000540249098620,
        0.0000430322693678,  0.0000295726249887,  0.0000176731639331,
        0.0000093266514042,  0.0000044686871000,  0.0000020316049715,
        0.0000009245517890,  0.0000004369335642,  0.0000002137495321,
        0.0000001048869562,  0.0000000500117216,  0.0000000227245994,
        0.0000000160928562,  0.0000000353062505,  0.0000000733850996,
        0.0000001462544415,  0.0000002855232643,  0.0000005608927200,
        0.0000011261665085,  0.0000022791061676,  0.0000044686871000,
        0.0000081255979209,  0.0000132557020003,  0.0000190058722292,
        0.0000236791300971,  0.0000254935184187,  0.0000236791300971,
        0.0000190058722292,  0.0000132557020003,  0.0000081255979209,
        0.0000044686871000,  0.0000022791061676,  0.0000011261665085,
        0.0000005608927200,  0.0000002855232643,  0.0000001462544415,
        0.0000000733850996,  0.0000000353062505,  0.0000000160928562,
        0.0000000107107681,  0.0000000234496855,  0.0000000484483647,
        0.0000000950835888,  0.0000001794873557,  0.0000003318985238,
        0.0000006116183056,  0.0000011261665085,  0.0000020316049715,
        0.0000034710010494,  0.0000054307206669,  0.0000075892113436,
        0.0000093266514042,  0.0000099983387175,  0.0000093266514042,
        0.0000075892113436,  0.0000054307206669,  0.0000034710010494,
        0.0000020316049715,  0.0000011261665085,  0.0000006116183056,
        0.0000003318985238,  0.0000001794873557,  0.0000000950835888,
        0.0000000484483647,  0.0000000234496855,  0.0000000107107681,
        0.0000000066991839,  0.0000000146489940,  0.0000000301580017,
        0.0000000586421728,  0.0000001083899562,  0.0000001923833428,
        0.0000003318985238,  0.0000005608927200,  0.0000009245517890,
        0.0000014596316049,  0.0000021511646599,  0.0000028884638646,
        0.0000034710010494,  0.0000036943193143,  0.0000034710010494,
        0.0000028884638646,  0.0000021511646599,  0.0000014596316049,
        0.0000009245517890,  0.0000005608927200,  0.0000003318985238,
        0.0000001923833428,  0.0000001083899562,  0.0000000586421728,
        0.0000000301580017,  0.0000000146489940,  0.0000000066991839,
        0.0000000039371888,  0.0000000086038794,  0.0000000176797362,
        0.0000000342097636,  0.0000000625112258,  0.0000001083899562,
        0.0000001794873557,  0.0000002855232643,  0.0000004369335642,
        0.0000006391067450,  0.0000008812659939,  0.0000011261665085,
        0.0000013135021708,  0.0000013842350009,  0.0000013135021708,
        0.0000011261665085,  0.0000008812659939,  0.0000006391067450,
        0.0000004369335642,  0.0000002855232643,  0.0000001794873557,
        0.0000001083899562,  0.0000000625112258,  0.0000000342097636,
        0.0000000176797362,  0.0000000086038794,  0.0000000039371888,
        0.0000000021740486,  0.0000000047494923,  0.0000000097509511,
        0.0000000188241409,  0.0000000342097636,  0.0000000586421728,
        0.0000000950835888,  0.0000001462544415,  0.0000002137495321,
        0.0000002963525358,  0.0000003876007162,  0.0000004741173452,
        0.0000005374803512,  0.0000005608927200,  0.0000005374803512,
        0.0000004741173452,  0.0000003876007162,  0.0000002963525358,
        0.0000002137495321,  0.0000001462544415,  0.0000000950835888,
        0.0000000586421728,  0.0000000342097636,  0.0000000188241409,
        0.0000000097509511,  0.0000000047494923,  0.0000000021740486,
        0.0000000011278219,  0.0000000024635636,  0.0000000050559527,
        0.0000000097509511,  0.0000000176797362,  0.0000000301580017,
        0.0000000484483647,  0.0000000733850996,  0.0000001048869562,
        0.0000001414091271,  0.0000001794873557,  0.0000002137495321,
        0.0000002378823672,  0.0000002466172086,  0.0000002378823672,
        0.0000002137495321,  0.0000001794873557,  0.0000001414091271,
        0.0000001048869562,  0.0000000733850996,  0.0000000484483647,
        0.0000000301580017,  0.0000000176797362,  0.0000000097509511,
        0.0000000050559527,  0.0000000024635636,  0.0000000011278219,
        0.0000000005496455,  0.0000000012005638,  0.0000000024635636,
        0.0000000047494923,  0.0000000086038794,  0.0000000146489940,
        0.0000000234496855,  0.0000000353062505,  0.0000000500117216,
        0.0000000666448994,  0.0000000834969139,  0.0000000982383699,
        0.0000001083899562,  0.0000001120186061,  0.0000001083899562,
        0.0000000982383699,  0.0000000834969139,  0.0000000666448994,
        0.0000000500117216,  0.0000000353062505,  0.0000000234496855,
        0.0000000146489940,  0.0000000086038794,  0.0000000047494923,
        0.0000000024635636,  0.0000000012005638,  0.0000000005496455,
        0.0000000002516443,  0.0000000005496455,  0.0000000011278219,
        0.0000000021740486,  0.0000000039371888,  0.0000000066991839,
        0.0000000107107681,  0.0000000160928562,  0.0000000227245994,
        0.0000000301580017,  0.0000000376074855,  0.0000000440515924,
        0.0000000484483647,  0.0000000500117216,  0.0000000484483647,
        0.0000000440515924,  0.0000000376074855,  0.0000000301580017,
        0.0000000227245994,  0.0000000160928562,  0.0000000107107681,
        0.0000000066991839,  0.0000000039371888,  0.0000000021740486,
        0.0000000011278219,  0.0000000005496455,  0.0000000002516443
    }; 

    const int min_x = (static_cast<int>(launchIndex.x) - bloom_filter_size / 2) < 0 ? 0 : (launchIndex.x - bloom_filter_size / 2);
    const int max_x = (static_cast<int>(launchIndex.x) + bloom_filter_size / 2) > launchDim.x - 1 ? launchDim.x - 1: (launchIndex.x + bloom_filter_size / 2);
    const int min_y = (static_cast<int>(launchIndex.y) - bloom_filter_size / 2) < 0 ? 0 : (launchIndex.y - bloom_filter_size / 2);
    const int max_y = (static_cast<int>(launchIndex.y) + bloom_filter_size / 2) > launchDim.y - 1 ? launchDim.y - 1: (launchIndex.y + bloom_filter_size / 2);

    float3 bloomLuminance = optix::make_float3(0,0,0);
    for (int myx = min_x; myx < max_x; myx++) {
        for (int myy = min_y; myy < max_y; myy++) {
            int kernel_index = (myx - static_cast<int>(launchIndex.x) + bloom_filter_size / 2) * bloom_filter_size + 
                (myy - static_cast<int>(launchIndex.y) + bloom_filter_size / 2);
            float3 value = rawOutputImageBuffer[optix::make_uint2(myx,myy)];
            value = value - 0.05f;
            value.x *= value.x * value.x;
            value.x = min(10000.0,value.x);
            value.y *= value.y * value.y;
            value.y = min(10000.0,value.y);
            value.z *= value.z * value.z;
            value.z = min(10000.0,value.z);
            bloomLuminance += BLOOM_FILTER[kernel_index] * value;// * 1.0 * (static_cast<float>(bloom_filter_size * bloom_filter_size) / ((max_x - min_x) * (max_y - min_y)));
        }
    }

    float3 finalRadiance = rawOutputImageBuffer[launchIndex] + bloomLuminance;
    //float3 finalRadiance = rawOutputImageBuffer[launchIndex];
    //Simple gamma encoding with tweaked params from http://mitchellkember.com/blog/post/ray-tracer/
    //TODO Replace with proper asus CRF, maybe we have to calibrate it and setup
    //linear interpolation between points here?
    const float cutoff = 0.05;
    const float lin_scalar = 8.19;
    const float scalar = 20.0;
    const float pow_coeff = 1.0/100.0;
    if (finalRadiance.x < cutoff) {
        finalRadiance.x = lin_scalar * finalRadiance.x;
    } else {
        finalRadiance.x = scalar * pow(finalRadiance.x,pow_coeff) + 1.0 - scalar;
    }
    if (finalRadiance.y < cutoff) {
        finalRadiance.y = lin_scalar * finalRadiance.y;
    } else {
        finalRadiance.y = scalar * pow(finalRadiance.y,pow_coeff) + 1.0 - scalar;
    }
    if (finalRadiance.z < cutoff) {
        finalRadiance.z = lin_scalar * finalRadiance.z;
    } else {
        finalRadiance.z = scalar * pow(finalRadiance.z,pow_coeff) + 1.0 - scalar;
    }
    outputImageBuffer[launchIndex] = make_color(finalRadiance);
}
